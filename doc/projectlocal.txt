INTRODUCTION                              *projectlocal-vim* *projectlocal*

Load your vim project configurations safely, for vim and neovim. Written in
typescript via |denops.vim|.

This is a combination of projectcmd.vim and projectcmd.nvim with the aim to
unify both plugins to support both vim and neovim.

OVERVIEW                                            *projectlocal-overview*

If you've set |exrc| before, you would know that using it might execute
malicious code, see |exrc|.  Therefore, you would also be advised to also
set |secure| to disable some vim config options, see |secure|.

However, there might some options you may want to conditionally set in a
project-level basis but the limitations of `secure` restrict you from those
options. Some of these options include:

+ autocmd
+ shell commands
+ write commands

projectlocal-vim tries to tackle this by not using |secure| or
|exrc| but opening your project config file written in vimL or Lua and
sourcing it only if you allow the file to be executed or not.

What this means is that when you open a project directory with the local
config file in it, projectlocal-vim will first check if the directory is
allowed to have the local config. If it's not allowed, then it will prompt
the user to accept the local config as part of the files being executed to
set configurations for your project. If it's not on the allowed list, then
it will not execute, if a user also says no for adding it to the allow list,
then the local config file will not be loaded.

Essentially, the goal of this plugin is to help you safely source your
project-specific options. Think of it like an `.vscode/settings.json` file
but for vim/neovim and written in vimL or Lua.

[Revised from projectcmd.nvim]

CONFIGURATIONS                                        *projectlocal-config*

To get started, just install the plugin and add a `init.vim` to you project
directory into the location: `$PROJECT/.vim/init.vim` (where `$PROJECT` is
your project directory). This will automatically be picked up by
projectlocal-vim and will prompt you to be allowed to be sourced for the
first time.

Default configurations are as follows:

>
    let g:projectlocal = {
        \ 'showMessage': v:true,
        \ 'projectConfig': '.vim/init.vim',
        \ }
<

or in Lua:

>
    vim.g.projectlocal = {
        showMessage = true,
        projectConfig = '.vim/init.vim'
    }
<

These must be defined BEFORE the plugin is loaded via your plugin manager.

COMMANDS					    *projectlocal-commands*

Commands associated to enable/disable auto sourcing the local project config
or manually sourcing it.

                                 *:ProjectLocalConfig*
:ProjectLocalConfig              Open the project local config file, if it
                                 exists.


                                 *:ProjectLocalAutoloadEnable*
:ProjectLocalAutoloadEnable      Enable auto sourcing, if it was disabled.
				 This means on the next time you open vim
				 and the local project config has changed
				 then it will ask the user to allow sourcing
				 the file. If there were no changes on the
				 local project config file then source it
				 automatically.

                                 *:ProjectLocalAutoloadDisable*
:ProjectLocalAutoloadDisable     Disable auto sourcing, if it was enabled.
				 This means the next time you open vim then
				 it will not automatically source the local
				 project config file, but can manually load
				 the file via |:ProjectLocalLoad|.

                                 *:ProjectLocalLoad*
:ProjectLocalLoad                Manually source the local project config
				 file if autoload is disabled.


 vim:tw=78:ts=8:noet:ft=help:norl:
